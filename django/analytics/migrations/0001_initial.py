# Generated by Django 2.0.2 on 2018-02-27 17:47

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Catergories',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Type', models.CharField(max_length=100, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Client',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ClientName', models.CharField(max_length=150, unique=True)),
                ('Logo', models.FileField(blank=True, null=True, upload_to='logo')),
                ('User', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ClientToType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='analytics.Client')),
                ('Type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='analytics.Catergories')),
            ],
        ),
        migrations.CreateModel(
            name='Kiosk',
            fields=[
                ('ID', models.IntegerField(primary_key=True, serialize=False, verbose_name='ID')),
                ('CreatedOn', models.DateTimeField()),
                ('Client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='KioskToClient', to='analytics.Client')),
            ],
        ),
        migrations.CreateModel(
            name='KioskHistory',
            fields=[
                ('ID', models.IntegerField(primary_key=True, serialize=False, verbose_name='HistID')),
                ('CreatedOn', models.DateTimeField()),
                ('DeactivatedOn', models.DateTimeField()),
                ('Client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='KioskHistToClient', to='analytics.Client')),
            ],
        ),
        migrations.CreateModel(
            name='Location',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('LocationName', models.CharField(max_length=150, unique=True)),
                ('Address', models.CharField(max_length=150)),
            ],
        ),
        migrations.CreateModel(
            name='Partner',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('PartnerName', models.CharField(max_length=150)),
                ('User', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='PartnerToClient',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='analytics.Client')),
                ('Partner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='analytics.Partner')),
            ],
        ),
        migrations.CreateModel(
            name='PartnerToKiosk',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Kiosk', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='analytics.Kiosk')),
                ('Partner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='analytics.Partner')),
            ],
        ),
        migrations.CreateModel(
            name='Port',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Port', models.IntegerField(verbose_name='Port')),
                ('Type', models.CharField(choices=[('IPhone', 'IPhone'), ('Android', 'Android'), ('USB-C', 'USB-C'), ('Other', 'Other')], default='Other', max_length=20, verbose_name='Type')),
                ('Kiosk', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='KioskToPort', to='analytics.Kiosk')),
            ],
        ),
        migrations.CreateModel(
            name='ServerTest',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Test', models.CharField(max_length=1000)),
            ],
        ),
        migrations.CreateModel(
            name='Time',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('TimeIn', models.DateTimeField(verbose_name='TimeIn')),
                ('TimeOut', models.DateTimeField(verbose_name='TimeOut')),
                ('Duration', models.IntegerField(verbose_name='Duration')),
                ('Port', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='PortToTime', to='analytics.Port')),
            ],
        ),
        migrations.AddField(
            model_name='kioskhistory',
            name='Location',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='KioskHistToLocation', to='analytics.Location'),
        ),
        migrations.AddField(
            model_name='kiosk',
            name='Location',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='KioskToLocation', to='analytics.Location'),
        ),
    ]
